\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+c1}{\PYGZsh{} kandy\PYGZus{}kafka/adapters/kafka\PYGZus{}adapter.py}

\PYG{k+kn}{from} \PYG{n+nn}{abc} \PYG{k+kn}{import} \PYG{n}{ABC}\PYG{p}{,} \PYG{n}{abstractmethod}


\PYG{k}{class} \PYG{n+nc}{AbstractKafkaClusterAdapter}\PYG{p}{(}\PYG{n}{ABC}\PYG{p}{):}
\PYG{+w}{    }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+sd}{    Abstract base class for Kafka cluster adapters.}

\PYG{l+s+sd}{    Defines the interface for interacting with a Kafka cluster, including fetching topics}
\PYG{l+s+sd}{    and retrieving messages from a given topic.}
\PYG{l+s+sd}{    \PYGZdq{}\PYGZdq{}\PYGZdq{}}
    \PYG{n+nd}{@abstractmethod}
    \PYG{k}{def} \PYG{n+nf}{get\PYGZus{}topics}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{):}
        \PYG{k}{raise} \PYG{n+ne}{NotImplementedError}

    \PYG{n+nd}{@abstractmethod}
    \PYG{k}{def} \PYG{n+nf}{get\PYGZus{}messages}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{topic\PYGZus{}name}\PYG{p}{:} \PYG{n+nb}{str}\PYG{p}{):}
        \PYG{k}{raise} \PYG{n+ne}{NotImplementedError}


\PYG{k}{class} \PYG{n+nc}{KafkaAdapter}\PYG{p}{(}\PYG{n}{AbstractKafkaClusterAdapter}\PYG{p}{):}
\PYG{+w}{    }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+sd}{    Kafka adapter that implements the methods to interact with a Kafka cluster using}
\PYG{l+s+sd}{    confluent\PYGZhy{}kafka library.}
\PYG{l+s+sd}{    \PYGZdq{}\PYGZdq{}\PYGZdq{}}
    \PYG{k}{def} \PYG{n+nf+fm}{\PYGZus{}\PYGZus{}init\PYGZus{}\PYGZus{}}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{host}\PYG{p}{:} \PYG{n+nb}{str}\PYG{p}{,} \PYG{n}{port}\PYG{p}{:} \PYG{n+nb}{int}\PYG{p}{):}
        \PYG{k}{pass}

    \PYG{k}{def} \PYG{n+nf}{get\PYGZus{}topics}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{):}
        \PYG{k}{pass}

    \PYG{k}{def} \PYG{n+nf}{get\PYGZus{}messages}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{topic\PYGZus{}name}\PYG{p}{:} \PYG{n+nb}{str}\PYG{p}{):}
        \PYG{k}{pass}
\end{Verbatim}
