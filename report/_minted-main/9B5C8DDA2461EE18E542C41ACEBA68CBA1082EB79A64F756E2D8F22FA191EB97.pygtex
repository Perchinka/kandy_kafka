\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kn}{import} \PYG{n+nn}{pytest}
\PYG{k+kn}{from} \PYG{n+nn}{confluent\PYGZus{}kafka} \PYG{k+kn}{import} \PYG{n}{Producer}
\PYG{k+kn}{from} \PYG{n+nn}{confluent\PYGZus{}kafka.admin} \PYG{k+kn}{import} \PYG{n}{NewTopic}
\PYG{k+kn}{from} \PYG{n+nn}{kandy\PYGZus{}kafka.adapters.kafka\PYGZus{}adapter} \PYG{k+kn}{import} \PYG{n}{KafkaAdapter}
\PYG{k+kn}{from} \PYG{n+nn}{kandy\PYGZus{}kafka.domain.models} \PYG{k+kn}{import} \PYG{n}{KafkaMessage}\PYG{p}{,} \PYG{n}{Topic}

\PYG{k+kn}{import} \PYG{n+nn}{string}
\PYG{k+kn}{import} \PYG{n+nn}{random}


\PYG{c+c1}{\PYGZsh{} \PYGZhy{}\PYGZhy{}\PYGZhy{} Helper Functions \PYGZhy{}\PYGZhy{}\PYGZhy{}}


\PYG{k}{def} \PYG{n+nf}{generate\PYGZus{}random\PYGZus{}string}\PYG{p}{(}\PYG{n}{length}\PYG{o}{=}\PYG{l+m+mi}{6}\PYG{p}{):}
\PYG{+w}{    }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}Generate a random string of fixed length.\PYGZdq{}\PYGZdq{}\PYGZdq{}}
    \PYG{k}{return} \PYG{l+s+s2}{\PYGZdq{}\PYGZdq{}}\PYG{o}{.}\PYG{n}{join}\PYG{p}{(}\PYG{n}{random}\PYG{o}{.}\PYG{n}{choices}\PYG{p}{(}\PYG{n}{string}\PYG{o}{.}\PYG{n}{ascii\PYGZus{}lowercase}\PYG{p}{,} \PYG{n}{k}\PYG{o}{=}\PYG{n}{length}\PYG{p}{))}


\PYG{k}{def} \PYG{n+nf}{create\PYGZus{}topic}\PYG{p}{(}\PYG{n}{kafka\PYGZus{}admin\PYGZus{}client}\PYG{p}{,} \PYG{n}{topic\PYGZus{}name}\PYG{p}{,} \PYG{n}{num\PYGZus{}partitions}\PYG{p}{,} \PYG{n}{replication\PYGZus{}factor}\PYG{o}{=}\PYG{l+m+mi}{1}\PYG{p}{):}
\PYG{+w}{    }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}Create a Kafka topic with the specified name, partitions, and replication factor.\PYGZdq{}\PYGZdq{}\PYGZdq{}}
    \PYG{n}{topic} \PYG{o}{=} \PYG{n}{NewTopic}\PYG{p}{(}
        \PYG{n}{topic\PYGZus{}name}\PYG{p}{,} \PYG{n}{num\PYGZus{}partitions}\PYG{o}{=}\PYG{n}{num\PYGZus{}partitions}\PYG{p}{,} \PYG{n}{replication\PYGZus{}factor}\PYG{o}{=}\PYG{n}{replication\PYGZus{}factor}
    \PYG{p}{)}
    \PYG{n}{kafka\PYGZus{}admin\PYGZus{}client}\PYG{o}{.}\PYG{n}{create\PYGZus{}topics}\PYG{p}{([}\PYG{n}{topic}\PYG{p}{])}
    \PYG{k}{return} \PYG{n}{topic\PYGZus{}name}


\PYG{k}{def} \PYG{n+nf}{produce\PYGZus{}messages}\PYG{p}{(}\PYG{n}{producer}\PYG{p}{,} \PYG{n}{topic\PYGZus{}name}\PYG{p}{,} \PYG{n}{messages}\PYG{p}{):}
\PYG{+w}{    }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}Produce a list of messages to a Kafka topic.\PYGZdq{}\PYGZdq{}\PYGZdq{}}
    \PYG{k}{for} \PYG{n}{message} \PYG{o+ow}{in} \PYG{n}{messages}\PYG{p}{:}
        \PYG{n}{producer}\PYG{o}{.}\PYG{n}{produce}\PYG{p}{(}\PYG{n}{topic\PYGZus{}name}\PYG{p}{,} \PYG{n}{value}\PYG{o}{=}\PYG{n}{message}\PYG{p}{)}
    \PYG{n}{producer}\PYG{o}{.}\PYG{n}{flush}\PYG{p}{()}


\PYG{k}{def} \PYG{n+nf}{produce\PYGZus{}random\PYGZus{}messages}\PYG{p}{(}\PYG{n}{server}\PYG{p}{,} \PYG{n}{topic\PYGZus{}name}\PYG{p}{,} \PYG{n}{num\PYGZus{}messages}\PYG{o}{=}\PYG{l+m+mi}{10}\PYG{p}{):}
\PYG{+w}{    }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+sd}{    Produce a specific number of random messages to a Kafka topic.}

\PYG{l+s+sd}{    Parameters:}
\PYG{l+s+sd}{    \PYGZhy{} server (object): Server configuration object containing host and port.}
\PYG{l+s+sd}{    \PYGZhy{} topic\PYGZus{}name (str): Kafka topic to produce messages to.}
\PYG{l+s+sd}{    \PYGZhy{} num\PYGZus{}messages (int): Number of random messages to produce.}
\PYG{l+s+sd}{    \PYGZdq{}\PYGZdq{}\PYGZdq{}}
    \PYG{n}{producer} \PYG{o}{=} \PYG{n}{Producer}\PYG{p}{(\PYGZob{}}\PYG{l+s+s2}{\PYGZdq{}bootstrap.servers\PYGZdq{}}\PYG{p}{:} \PYG{l+s+sa}{f}\PYG{l+s+s2}{\PYGZdq{}}\PYG{l+s+si}{\PYGZob{}}\PYG{n}{server}\PYG{o}{.}\PYG{n}{HOST}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+s2}{:}\PYG{l+s+si}{\PYGZob{}}\PYG{n}{server}\PYG{o}{.}\PYG{n}{PORT}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+s2}{\PYGZdq{}}\PYG{p}{\PYGZcb{})}
    \PYG{n}{messages} \PYG{o}{=} \PYG{p}{[}\PYG{l+s+sa}{f}\PYG{l+s+s2}{\PYGZdq{}message\PYGZhy{}}\PYG{l+s+si}{\PYGZob{}}\PYG{n}{i}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+s2}{\PYGZdq{}} \PYG{k}{for} \PYG{n}{i} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{n}{num\PYGZus{}messages}\PYG{p}{)]}
    \PYG{n}{produce\PYGZus{}messages}\PYG{p}{(}\PYG{n}{producer}\PYG{p}{,} \PYG{n}{topic\PYGZus{}name}\PYG{p}{,} \PYG{n}{messages}\PYG{p}{)}


\PYG{c+c1}{\PYGZsh{} \PYGZhy{}\PYGZhy{}\PYGZhy{} Fixtures \PYGZhy{}\PYGZhy{}\PYGZhy{}}


\PYG{n+nd}{@pytest}\PYG{o}{.}\PYG{n}{fixture}
\PYG{k}{def} \PYG{n+nf}{kafka\PYGZus{}adapter}\PYG{p}{(}\PYG{n}{server}\PYG{p}{):}
\PYG{+w}{    }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}Fixture to initialize and yield a KafkaAdapter object.\PYGZdq{}\PYGZdq{}\PYGZdq{}}
    \PYG{n}{adapter} \PYG{o}{=} \PYG{n}{KafkaAdapter}\PYG{p}{(}\PYG{n}{server}\PYG{o}{.}\PYG{n}{HOST}\PYG{p}{,} \PYG{n}{server}\PYG{o}{.}\PYG{n}{PORT}\PYG{p}{)}
    \PYG{k}{yield} \PYG{n}{adapter}
    \PYG{n}{adapter}\PYG{o}{.}\PYG{n}{consumer}\PYG{o}{.}\PYG{n}{close}\PYG{p}{()}


\PYG{n+nd}{@pytest}\PYG{o}{.}\PYG{n}{fixture}
\PYG{k}{def} \PYG{n+nf}{create\PYGZus{}test\PYGZus{}topic}\PYG{p}{(}\PYG{n}{kafka\PYGZus{}admin\PYGZus{}client}\PYG{p}{,} \PYG{n}{server}\PYG{p}{):}
\PYG{+w}{    }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+sd}{    Fixture to create a unique test topic for each test and produce messages into it.}

\PYG{l+s+sd}{    This fixture generates a unique topic name, creates the topic in Kafka,}
\PYG{l+s+sd}{    produces a specific number of messages, and returns the topic name for consumption.}
\PYG{l+s+sd}{    \PYGZdq{}\PYGZdq{}\PYGZdq{}}

    \PYG{k}{def} \PYG{n+nf}{\PYGZus{}create\PYGZus{}topic\PYGZus{}with\PYGZus{}messages}\PYG{p}{(}
        \PYG{n}{num\PYGZus{}messages}\PYG{p}{,} \PYG{n}{num\PYGZus{}partitions}\PYG{o}{=}\PYG{l+m+mi}{1}\PYG{p}{,} \PYG{n}{topic\PYGZus{}name}\PYG{o}{=}\PYG{n}{generate\PYGZus{}random\PYGZus{}string}\PYG{p}{()}
    \PYG{p}{):}
        \PYG{n}{create\PYGZus{}topic}\PYG{p}{(}\PYG{n}{kafka\PYGZus{}admin\PYGZus{}client}\PYG{p}{,} \PYG{n}{topic\PYGZus{}name}\PYG{p}{,} \PYG{n}{num\PYGZus{}partitions}\PYG{p}{)}
        \PYG{n}{produce\PYGZus{}random\PYGZus{}messages}\PYG{p}{(}\PYG{n}{server}\PYG{p}{,} \PYG{n}{topic\PYGZus{}name}\PYG{p}{,} \PYG{n}{num\PYGZus{}messages}\PYG{p}{)}
        \PYG{k}{return} \PYG{n}{topic\PYGZus{}name}

    \PYG{k}{return} \PYG{n}{\PYGZus{}create\PYGZus{}topic\PYGZus{}with\PYGZus{}messages}


\PYG{c+c1}{\PYGZsh{} \PYGZhy{}\PYGZhy{}\PYGZhy{} Test Cases \PYGZhy{}\PYGZhy{}\PYGZhy{}}


\PYG{k}{def} \PYG{n+nf}{test\PYGZus{}should\PYGZus{}return\PYGZus{}topic\PYGZus{}list}\PYG{p}{(}\PYG{n}{kafka\PYGZus{}adapter}\PYG{p}{,} \PYG{n}{create\PYGZus{}test\PYGZus{}topic}\PYG{p}{):}
\PYG{+w}{    }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+sd}{    Test if KafkaAdapter returns a list of topics after auto\PYGZhy{}producing messages to a new topic.}
\PYG{l+s+sd}{    \PYGZdq{}\PYGZdq{}\PYGZdq{}}
    \PYG{n}{topic\PYGZus{}name} \PYG{o}{=} \PYG{n}{create\PYGZus{}test\PYGZus{}topic}\PYG{p}{(}\PYG{n}{num\PYGZus{}messages}\PYG{o}{=}\PYG{l+m+mi}{10}\PYG{p}{)}

    \PYG{n}{topics} \PYG{o}{=} \PYG{n}{kafka\PYGZus{}adapter}\PYG{o}{.}\PYG{n}{get\PYGZus{}topics}\PYG{p}{()}

    \PYG{k}{assert} \PYG{n+nb}{isinstance}\PYG{p}{(}\PYG{n}{topics}\PYG{p}{,} \PYG{n+nb}{list}\PYG{p}{)}
    \PYG{k}{assert} \PYG{n+nb}{all}\PYG{p}{(}\PYG{n+nb}{isinstance}\PYG{p}{(}\PYG{n}{topic}\PYG{p}{,} \PYG{n}{Topic}\PYG{p}{)} \PYG{k}{for} \PYG{n}{topic} \PYG{o+ow}{in} \PYG{n}{topics}\PYG{p}{)}
    \PYG{k}{assert} \PYG{n}{topic\PYGZus{}name} \PYG{o+ow}{in} \PYG{p}{[}\PYG{n}{topic}\PYG{o}{.}\PYG{n}{name} \PYG{k}{for} \PYG{n}{topic} \PYG{o+ow}{in} \PYG{n}{topics}\PYG{p}{]}


\PYG{k}{def} \PYG{n+nf}{test\PYGZus{}should\PYGZus{}return\PYGZus{}10\PYGZus{}messages\PYGZus{}from\PYGZus{}topic\PYGZus{}with\PYGZus{}10\PYGZus{}messages}\PYG{p}{(}
    \PYG{n}{kafka\PYGZus{}adapter}\PYG{p}{,} \PYG{n}{create\PYGZus{}test\PYGZus{}topic}
\PYG{p}{):}
\PYG{+w}{    }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+sd}{    Test if KafkaAdapter correctly returns 10 messages from a topic with exactly 10 messages.}
\PYG{l+s+sd}{    \PYGZdq{}\PYGZdq{}\PYGZdq{}}
    \PYG{c+c1}{\PYGZsh{} Create a topic with exactly 10 messages}
    \PYG{n}{topic\PYGZus{}name} \PYG{o}{=} \PYG{n}{create\PYGZus{}test\PYGZus{}topic}\PYG{p}{(}\PYG{n}{num\PYGZus{}messages}\PYG{o}{=}\PYG{l+m+mi}{10}\PYG{p}{)}

    \PYG{n}{messages} \PYG{o}{=} \PYG{n}{kafka\PYGZus{}adapter}\PYG{o}{.}\PYG{n}{get\PYGZus{}messages}\PYG{p}{(}\PYG{n}{topic\PYGZus{}name}\PYG{p}{)}

    \PYG{k}{assert} \PYG{n+nb}{isinstance}\PYG{p}{(}\PYG{n}{messages}\PYG{p}{,} \PYG{n+nb}{list}\PYG{p}{)}
    \PYG{k}{assert} \PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{messages}\PYG{p}{)} \PYG{o}{==} \PYG{l+m+mi}{10}
    \PYG{k}{assert} \PYG{n+nb}{all}\PYG{p}{(}\PYG{n+nb}{isinstance}\PYG{p}{(}\PYG{n}{message}\PYG{p}{,} \PYG{n}{KafkaMessage}\PYG{p}{)} \PYG{k}{for} \PYG{n}{message} \PYG{o+ow}{in} \PYG{n}{messages}\PYG{p}{)}


\PYG{k}{def} \PYG{n+nf}{test\PYGZus{}should\PYGZus{}return\PYGZus{}50\PYGZus{}messages\PYGZus{}from\PYGZus{}topic\PYGZus{}with\PYGZus{}100\PYGZus{}messages}\PYG{p}{(}
    \PYG{n}{kafka\PYGZus{}adapter}\PYG{p}{,} \PYG{n}{create\PYGZus{}test\PYGZus{}topic}
\PYG{p}{):}
\PYG{+w}{    }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+sd}{    Test if KafkaAdapter returns a maximum of 50 messages from a topic with 100 messages. (50 is the default limit)}
\PYG{l+s+sd}{    \PYGZdq{}\PYGZdq{}\PYGZdq{}}
    \PYG{c+c1}{\PYGZsh{} Create a topic with 100 messages}
    \PYG{n}{topic\PYGZus{}name} \PYG{o}{=} \PYG{n}{create\PYGZus{}test\PYGZus{}topic}\PYG{p}{(}\PYG{n}{num\PYGZus{}messages}\PYG{o}{=}\PYG{l+m+mi}{100}\PYG{p}{)}

    \PYG{c+c1}{\PYGZsh{} Fetch messages from the KafkaAdapter}
    \PYG{n}{messages} \PYG{o}{=} \PYG{n}{kafka\PYGZus{}adapter}\PYG{o}{.}\PYG{n}{get\PYGZus{}messages}\PYG{p}{(}\PYG{n}{topic\PYGZus{}name}\PYG{p}{)}

    \PYG{k}{assert} \PYG{n+nb}{isinstance}\PYG{p}{(}\PYG{n}{messages}\PYG{p}{,} \PYG{n+nb}{list}\PYG{p}{)}
    \PYG{k}{assert} \PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{messages}\PYG{p}{)} \PYG{o}{==} \PYG{l+m+mi}{50}  \PYG{c+c1}{\PYGZsh{} Assuming that KafkaAdapter limits consumption to 50}
    \PYG{k}{assert} \PYG{n+nb}{all}\PYG{p}{(}\PYG{n+nb}{isinstance}\PYG{p}{(}\PYG{n}{message}\PYG{p}{,} \PYG{n}{KafkaMessage}\PYG{p}{)} \PYG{k}{for} \PYG{n}{message} \PYG{o+ow}{in} \PYG{n}{messages}\PYG{p}{)}


\PYG{n+nd}{@pytest}\PYG{o}{.}\PYG{n}{mark}\PYG{o}{.}\PYG{n}{parametrize}\PYG{p}{(}
    \PYG{l+s+s2}{\PYGZdq{}num\PYGZus{}topics, num\PYGZus{}messages, num\PYGZus{}partitions\PYGZdq{}}\PYG{p}{,}
    \PYG{p}{[}
        \PYG{p}{(}
            \PYG{n}{random}\PYG{o}{.}\PYG{n}{randint}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{,} \PYG{l+m+mi}{5}\PYG{p}{),}
            \PYG{n}{random}\PYG{o}{.}\PYG{n}{randint}\PYG{p}{(}\PYG{l+m+mi}{51}\PYG{p}{,} \PYG{l+m+mi}{100}\PYG{p}{),}
            \PYG{n}{random}\PYG{o}{.}\PYG{n}{randint}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{,} \PYG{l+m+mi}{50}\PYG{p}{),}
        \PYG{p}{),}
    \PYG{p}{],}
\PYG{p}{)}
\PYG{k}{def} \PYG{n+nf}{test\PYGZus{}kafka\PYGZus{}adapter\PYGZus{}consume}\PYG{p}{(}
    \PYG{n}{kafka\PYGZus{}adapter}\PYG{p}{,} \PYG{n}{kafka\PYGZus{}admin\PYGZus{}client}\PYG{p}{,} \PYG{n}{num\PYGZus{}topics}\PYG{p}{,} \PYG{n}{num\PYGZus{}messages}\PYG{p}{,} \PYG{n}{num\PYGZus{}partitions}\PYG{p}{,} \PYG{n}{server}
\PYG{p}{):}
\PYG{+w}{    }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+sd}{    Test if KafkaAdapter correctly consumes messages from topics with random amount of partitions}

\PYG{l+s+sd}{    Parameters:}
\PYG{l+s+sd}{    \PYGZhy{} num\PYGZus{}topics (int): Number of topics to create.}
\PYG{l+s+sd}{    \PYGZhy{} num\PYGZus{}messages (int): Number of messages per topic.}
\PYG{l+s+sd}{    \PYGZhy{} num\PYGZus{}partitions (int): Number of partitions per topic.}
\PYG{l+s+sd}{    \PYGZdq{}\PYGZdq{}\PYGZdq{}}
    \PYG{n}{created\PYGZus{}topics} \PYG{o}{=} \PYG{p}{[]}

    \PYG{c+c1}{\PYGZsh{} Create topics and produce messages}
    \PYG{k}{for} \PYG{n}{\PYGZus{}} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{n}{num\PYGZus{}topics}\PYG{p}{):}
        \PYG{n}{topic\PYGZus{}name} \PYG{o}{=} \PYG{l+s+sa}{f}\PYG{l+s+s2}{\PYGZdq{}test\PYGZhy{}topic\PYGZhy{}}\PYG{l+s+si}{\PYGZob{}}\PYG{n}{generate\PYGZus{}random\PYGZus{}string}\PYG{p}{()}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+s2}{\PYGZdq{}}
        \PYG{n}{create\PYGZus{}topic}\PYG{p}{(}\PYG{n}{kafka\PYGZus{}admin\PYGZus{}client}\PYG{p}{,} \PYG{n}{topic\PYGZus{}name}\PYG{p}{,} \PYG{n}{num\PYGZus{}partitions}\PYG{p}{)}
        \PYG{n}{created\PYGZus{}topics}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{n}{topic\PYGZus{}name}\PYG{p}{)}

        \PYG{n}{produce\PYGZus{}random\PYGZus{}messages}\PYG{p}{(}\PYG{n}{server}\PYG{p}{,} \PYG{n}{topic\PYGZus{}name}\PYG{p}{,} \PYG{n}{num\PYGZus{}messages}\PYG{p}{)}

    \PYG{c+c1}{\PYGZsh{} Test KafkaAdapter consumption}
    \PYG{n}{consumed\PYGZus{}topics} \PYG{o}{=} \PYG{n}{kafka\PYGZus{}adapter}\PYG{o}{.}\PYG{n}{get\PYGZus{}topics}\PYG{p}{()}
    \PYG{k}{for} \PYG{n}{topic} \PYG{o+ow}{in} \PYG{n}{consumed\PYGZus{}topics}\PYG{p}{:}
        \PYG{k}{if} \PYG{n}{topic}\PYG{o}{.}\PYG{n}{name} \PYG{o+ow}{in} \PYG{n}{created\PYGZus{}topics}\PYG{p}{:}
            \PYG{n}{messages} \PYG{o}{=} \PYG{n}{kafka\PYGZus{}adapter}\PYG{o}{.}\PYG{n}{get\PYGZus{}messages}\PYG{p}{(}\PYG{n}{topic}\PYG{o}{.}\PYG{n}{name}\PYG{p}{)}
            \PYG{k}{assert} \PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{messages}\PYG{p}{)} \PYG{o}{==} \PYG{n+nb}{min}\PYG{p}{(}\PYG{n}{num\PYGZus{}messages}\PYG{p}{,} \PYG{l+m+mi}{50}\PYG{p}{)}
            \PYG{k}{assert} \PYG{n+nb}{all}\PYG{p}{(}\PYG{n+nb}{isinstance}\PYG{p}{(}\PYG{n}{message}\PYG{p}{,} \PYG{n}{KafkaMessage}\PYG{p}{)} \PYG{k}{for} \PYG{n}{message} \PYG{o+ow}{in} \PYG{n}{messages}\PYG{p}{)}
            \PYG{k}{assert} \PYG{n+nb}{all}\PYG{p}{(}\PYG{n}{message}\PYG{o}{.}\PYG{n}{topic} \PYG{o}{==} \PYG{n}{topic}\PYG{o}{.}\PYG{n}{name} \PYG{k}{for} \PYG{n}{message} \PYG{o+ow}{in} \PYG{n}{messages}\PYG{p}{)}
\end{Verbatim}
