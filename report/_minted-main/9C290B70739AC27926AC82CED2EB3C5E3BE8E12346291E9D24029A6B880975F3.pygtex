\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kn}{import} \PYG{n+nn}{pytest}
\PYG{k+kn}{from} \PYG{n+nn}{kandy\PYGZus{}kafka.adapters.kafka\PYGZus{}adapter} \PYG{k+kn}{import} \PYG{n}{KafkaAdapter}
\PYG{k+kn}{from} \PYG{n+nn}{confluent\PYGZus{}kafka.admin} \PYG{k+kn}{import} \PYG{n}{AdminClient}\PYG{p}{,} \PYG{n}{NewTopic}
\PYG{k+kn}{from} \PYG{n+nn}{confluent\PYGZus{}kafka} \PYG{k+kn}{import} \PYG{n}{Consumer}\PYG{p}{,} \PYG{n}{Message}\PYG{p}{,} \PYG{n}{Producer}

\PYG{k+kn}{from} \PYG{n+nn}{kandy\PYGZus{}kafka.domain.models} \PYG{k+kn}{import} \PYG{n}{Topic}


\PYG{n+nd}{@pytest}\PYG{o}{.}\PYG{n}{fixture}
\PYG{k}{def} \PYG{n+nf}{kafka\PYGZus{}adapter}\PYG{p}{(}\PYG{n}{server}\PYG{p}{):}
\PYG{+w}{    }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}Instantiate a KafkaAdapter object and return it as a fixture\PYGZdq{}\PYGZdq{}\PYGZdq{}}
    \PYG{n}{adapter} \PYG{o}{=} \PYG{n}{KafkaAdapter}\PYG{p}{(}\PYG{n}{server}\PYG{o}{.}\PYG{n}{HOST}\PYG{p}{,} \PYG{n}{server}\PYG{o}{.}\PYG{n}{PORT}\PYG{p}{)}
    \PYG{k}{yield} \PYG{n}{adapter}


\PYG{k}{def} \PYG{n+nf}{test\PYGZus{}should\PYGZus{}return\PYGZus{}topic\PYGZus{}list}\PYG{p}{(}\PYG{n}{kafka\PYGZus{}adapter}\PYG{p}{):}
    \PYG{n}{topics} \PYG{o}{=} \PYG{n}{kafka\PYGZus{}adapter}\PYG{o}{.}\PYG{n}{get\PYGZus{}topics}\PYG{p}{()}
    \PYG{k}{assert} \PYG{n+nb}{isinstance}\PYG{p}{(}\PYG{n}{topics}\PYG{p}{,} \PYG{n+nb}{list}\PYG{p}{)}
    \PYG{k}{assert} \PYG{n+nb}{isinstance}\PYG{p}{(}\PYG{n}{topics}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{],} \PYG{n}{Topic}\PYG{p}{)}
    \PYG{k}{assert} \PYG{n+nb}{all}\PYG{p}{(}
        \PYG{n}{name} \PYG{o+ow}{in} \PYG{p}{[}\PYG{n}{topic}\PYG{o}{.}\PYG{n}{name} \PYG{k}{for} \PYG{n}{topic} \PYG{o+ow}{in} \PYG{n}{topics}\PYG{p}{]} \PYG{k}{for} \PYG{n}{name} \PYG{o+ow}{in} \PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}test1\PYGZdq{}}\PYG{p}{,} \PYG{l+s+s2}{\PYGZdq{}test2\PYGZdq{}}\PYG{p}{,} \PYG{l+s+s2}{\PYGZdq{}test3\PYGZdq{}}\PYG{p}{]}
    \PYG{p}{)}


\PYG{k}{def} \PYG{n+nf}{test\PYGZus{}should\PYGZus{}return\PYGZus{}10\PYGZus{}messages\PYGZus{}from\PYGZus{}topic}\PYG{p}{(}\PYG{n}{kafka\PYGZus{}adapter}\PYG{p}{):}
    \PYG{n}{messages} \PYG{o}{=} \PYG{n}{kafka\PYGZus{}adapter}\PYG{o}{.}\PYG{n}{get\PYGZus{}messages}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}test1\PYGZdq{}}\PYG{p}{)}
    \PYG{k}{assert} \PYG{n+nb}{isinstance}\PYG{p}{(}\PYG{n}{messages}\PYG{p}{,} \PYG{n+nb}{list}\PYG{p}{)}
    \PYG{k}{assert} \PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{messages}\PYG{p}{)} \PYG{o}{==} \PYG{l+m+mi}{10}
    \PYG{k}{assert} \PYG{n+nb}{all}\PYG{p}{(}\PYG{n+nb}{isinstance}\PYG{p}{(}\PYG{n}{message}\PYG{p}{,} \PYG{n}{Message}\PYG{p}{)} \PYG{k}{for} \PYG{n}{message} \PYG{o+ow}{in} \PYG{n}{messages}\PYG{p}{)}


\PYG{k}{def} \PYG{n+nf}{test\PYGZus{}should\PYGZus{}return\PYGZus{}50\PYGZus{}messages\PYGZus{}from\PYGZus{}topic\PYGZus{}with\PYGZus{}100\PYGZus{}messages}\PYG{p}{(}\PYG{n}{kafka\PYGZus{}adapter}\PYG{p}{):}
    \PYG{n}{messages} \PYG{o}{=} \PYG{n}{kafka\PYGZus{}adapter}\PYG{o}{.}\PYG{n}{get\PYGZus{}messages}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}test2\PYGZdq{}}\PYG{p}{)}
    \PYG{k}{assert} \PYG{n+nb}{isinstance}\PYG{p}{(}\PYG{n}{messages}\PYG{p}{,} \PYG{n+nb}{list}\PYG{p}{)}
    \PYG{k}{assert} \PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{messages}\PYG{p}{)} \PYG{o}{==} \PYG{l+m+mi}{50}
    \PYG{k}{assert} \PYG{n+nb}{all}\PYG{p}{(}\PYG{n+nb}{isinstance}\PYG{p}{(}\PYG{n}{message}\PYG{p}{,} \PYG{n}{Message}\PYG{p}{)} \PYG{k}{for} \PYG{n}{message} \PYG{o+ow}{in} \PYG{n}{messages}\PYG{p}{)}
\end{Verbatim}
